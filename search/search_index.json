{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Integra\u00e7\u00e3o Google Sheets + Power BI com Google Apps Script","text":"<p>Este projeto permite a integra\u00e7\u00e3o de dados do Google Sheets com Power BI por meio de um endpoint personalizado criado com Google Apps Script. O objetivo \u00e9 expor dados em formato JSON, facilitando a conex\u00e3o segura e perform\u00e1tica com ferramentas de BI.</p>"},{"location":"codigo/","title":"\ud83d\udcc4 C\u00f3digo","text":"<pre><code>function doGet(e) {\n  var ss = SpreadsheetApp.openById(\n    \"1ylLkwJIlyt0iNyvkWrR2jegwis266XHcJccuTYcChCE\"\n  );\n  var sheet = ss.getSheetByName(\"BASE\");\n  var data = sheet.getDataRange().getValues();\n\n  var headers = data[0];\n  var jsonData = data.slice(1).map(function (row) {\n    var obj = {};\n    headers.forEach(function (header, i) {\n      var value = row[i];\n      if (i &gt;= 3) {\n        value = String(value).replace(/-/g, \"\");\n      }\n      obj[header] = value;\n    });\n    return obj;\n  });\n\n  return ContentService.createTextOutput(JSON.stringify(jsonData)).setMimeType(\n    ContentService.MimeType.JSON\n  );\n}\n</code></pre>"},{"location":"conclusao/","title":"\ud83d\udccc Conclus\u00e3o","text":"<p>Essa abordagem com Google Apps Script oferece:</p> <ul> <li>Seguran\u00e7a: N\u00e3o precisa deixar a planilha p\u00fablica.</li> <li>Performance: Resposta mais r\u00e1pida em grandes volumes.</li> <li>Flexibilidade: Possibilidade de tratar e filtrar dados no pr\u00f3prio script.</li> </ul> <p>Uma solu\u00e7\u00e3o pr\u00e1tica e escal\u00e1vel para quem usa Power BI com dados do Google Sheets.</p>"},{"location":"explicacao/","title":"\u2699\ufe0f Explica\u00e7\u00e3o do C\u00f3digo","text":"<ul> <li><code>doGet(e)</code>: Fun\u00e7\u00e3o executada em requisi\u00e7\u00f5es GET.</li> <li><code>SpreadsheetApp.openById(...)</code>: Acessa a planilha pelo ID.</li> <li><code>getSheetByName(\"BASE\")</code>: Seleciona a aba <code>BASE</code>.</li> <li><code>getDataRange().getValues()</code>: L\u00ea todos os dados da aba.</li> <li>Transforma os dados em JSON:</li> <li>Cabe\u00e7alhos da primeira linha.</li> <li>Linhas convertidas em objetos JS.</li> <li>Colunas a partir da 4\u00aa t\u00eam <code>-</code> removidos.</li> </ul>"},{"location":"powerbi/","title":"\ud83d\udd17 Como usar no Power BI","text":"<p>Publique o script como Web App:</p> <ul> <li>V\u00e1 em Publicar &gt; Implantar como aplicativo da Web</li> <li>Escolha \"Qualquer pessoa\" como acesso</li> <li>Copie a URL gerada</li> </ul> <p>No Power BI:</p> <ul> <li>Clique em Obter Dados &gt; Web</li> <li>Cole a URL do Web App</li> <li>Selecione o formato JSON</li> <li>Importe e modele os dados</li> </ul> <p>Configura\u00e7\u00e3o do Power BI</p> <ul> <li>O arquivo est\u00e1 setado para atualizar todos os dias \u00e0s 6h da manh\u00e3</li> <li>Existe o modelo de dados e o arquivo base</li> <li>Est\u00e1 separado o arquivo base (criar m\u00e9tricas) e o relat\u00f3rio (consumir dados)</li> </ul>"},{"location":"vantagens/","title":"\u2705 Vantagens do M\u00e9todo","text":"Conex\u00e3o Direta (URL) Via Apps Script (JSON) Requer planilha p\u00fablica (risco de seguran\u00e7a) Acesso controlado, mais seguro Dados brutos, sem tratamento JSON limpo, campos tratados Problemas de desempenho Mais r\u00e1pido e est\u00e1vel para grandes volumes Pouca flexibilidade L\u00f3gica personalizada via script"},{"location":"workflow/","title":"\ud83d\uddc2\ufe0f Workflow","text":"<p>Abaixo, a representa\u00e7\u00e3o do fluxo de integra\u00e7\u00e3o entre o Google Sheets, Google Apps Script e Power BI:</p> <p></p> <ul> <li>Atualiza\u00e7\u00e3o di\u00e1ria com trigger \u00e0s 5h.</li> <li>Transforma\u00e7\u00e3o dos dados no script.</li> <li>Carregamento via JSON no Power BI.</li> </ul>"}]}